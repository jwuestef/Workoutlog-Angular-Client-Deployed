{"version":3,"sources":["app.js","history/history.js","define/define.js","logs/logs.js","auth/signin.js","auth/signup.js","auth/userlinks.js","authinterceptor.js","currentuser.js","define.service.js","logs.service.js","sessiontoken.js","users.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n\t\r\n\tvar app = angular.module(\"workoutlog\", [\r\n\t\t\"ui.router\",\r\n\t\t\"workoutlog.auth.signup\",\r\n\t\t\"workoutlog.auth.signin\",\r\n\t\t\"workoutlog.define\",\r\n\t\t\"workoutlog.logs\",\r\n\t\t\"workoutlog.history\"\r\n\t])\r\n\t.factory('socket', function(socketFactory) {\r\n\t\tvar myIoSocket = io.connect('http://localhost:3000');\r\n\r\n\t\tvar socket = socketFactory({\r\n\t\t\tioSocket: myIoSocket\r\n\t\t});\r\n\r\n\t\treturn socket;\r\n\t});\r\n\r\n\r\n\tfunction config($urlRouterProvider) {\r\n\t\t$urlRouterProvider.otherwise(\"/signin\");\r\n\t}\r\n\r\n\tconfig.$inject = [\"$urlRouterProvider\"];\r\n\tapp.config(config);\r\n\r\n\tvar API_BASE = location.hostname === \"localhost\" ? \"//localhost:3000/api/\" : \"//workoutlog-angular-server.herokuapp.com/api/\"\r\n\tapp.constant(\"API_BASE\", API_BASE);\r\n\r\n\r\n})();","(function() {\r\n\r\n\r\nangular.module(\"workoutlog.history\", [\"ui.router\"])\r\n\t.config(historyConfig);\r\n\r\n\r\n\r\nhistoryConfig.$inject = [\"$stateProvider\"];\r\n\r\nfunction historyConfig($stateProvider) {\r\n\t$stateProvider\r\n\t\t.state(\"history\", {\r\n\t\t\turl: \"/history\",\r\n\t\t\ttemplateUrl: \"/components/history/history.html\",\r\n\t\t\tcontroller: HistoryController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this,\r\n\t\t\tresolve: {\r\n\t\t\t\tgetUserLogs: [\r\n\t\t\t\t\t\"LogsService\",\r\n\t\t\t\t\tfunction(LogsService) {\r\n\t\t\t\t\t\treturn LogsService.fetch();\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\n\r\n\r\nHistoryController.$inject = [\"$state\", \"LogsService\"];\r\n\r\nfunction HistoryController($state, LogsService) {\r\n\tvar vm = this;\r\n\tvm.history = LogsService.getLogs();\r\n\r\n\tvm.delete = function(item) {\r\n\t\tLogsService.deleteLogs(item);\r\n\t};\r\n\r\n\tvm.updateLog = function(item) {\r\n\t\t$state.go(\"logs/update\", {\"id\": item.id});\r\n\t};\r\n\r\n};\r\n\r\n\r\n\r\n\r\n})();//end of wrapper IIFE\r\n\r\n\r\n//Notice how LogsService is injected and then implemented in this controller.  The history\r\n//component is used to present the collection of logs.  Look inside vm.updateLog, $state.go has the\r\n//route as the first argument but the second argument is an object with an id property.  This is how logs.js ‘knows” which log to get so it can be updated.\r\n","(function() {\r\n\r\n\r\nangular.module(\"workoutlog.define\", [\"ui.router\"])\r\n\t.config(defineConfig);\r\n\r\n\r\n\r\n\r\nfunction defineConfig($stateProvider) {\r\n\r\n\t$stateProvider\r\n\t\t.state(\"define\", {\r\n\t\t\turl: \"/define\",\r\n\t\t\ttemplateUrl: \"/components/define/define.html\",\r\n\t\t\tcontroller: DefineController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this,\r\n\t\t\tresolve: [\r\n\t\t\t\t\"CurrentUser\", \"$q\", \"$state\",\r\n\t\t\t\tfunction(CurrentUser, $q, $state){\r\n\t\t\t\t\tvar deferred = $q.defer();\r\n\t\t\t\t\tif (CurrentUser.isSignedIn()){\r\n\t\t\t\t\t\tdeferred.resolve();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdeferred.reject();\r\n\t\t\t\t\t\t$state.go(\"signin\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t}\t\r\n\t\t\t]\r\n\t\t});\r\n}\r\n\r\ndefineConfig.$inject = [\"$stateProvider\"];\r\n\r\n\r\n\r\nfunction DefineController( $state, DefineService ) {\r\n\tvar vm = this;\r\n\tvm.message = \"Define a workout category here\";\r\n\tvm.saved = false;\r\n\tvm.definition = {};\r\n\tvm.save = function() {\r\n\t\tDefineService.save(vm.definition)\r\n\t\t\t.then(function(){\r\n\t\t\t\tvm.saved = true;\r\n\t\t\t\t$state.go(\"logs\")\r\n\t\t\t});\r\n\t};\r\n\t\r\n}\r\n\r\nDefineController.$inject = [\"$state\", \"DefineService\"];\r\n\r\n\r\n\r\n\r\n\r\n})();","(function(){\r\n\r\n\r\nangular.module(\"workoutlog.logs\", [\"ui.router\"])\r\n\t.config(logsConfig);\r\n\r\n\r\n\r\nlogsConfig.$inject = [\"$stateProvider\"];\r\n\r\nfunction logsConfig($stateProvider) {\r\n\t$stateProvider\r\n\t\t.state(\"logs\", {\r\n\t\t\turl: \"/logs\",\r\n\t\t\ttemplateUrl: \"/components/logs/logs.html\",\r\n\t\t\tcontroller: LogsController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this,\r\n\t\t\tresolve: {\r\n\t\t\t\tgetUserDefinitions: [\r\n\t\t\t\t\t\"DefineService\",\r\n\t\t\t\t\tfunction(DefineService) {\r\n\t\t\t\t\t\treturn DefineService.fetch();\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state(\"logs/update\", {\r\n\t\t\turl: \"/logs/:id\",         //this is where it assigns the value of $stateParams.id\r\n\t\t\ttemplateUrl: \"/components/logs/log-update.html\",\r\n\t\t\tcontroller: LogsController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this,\r\n\t\t\tresolve: {           //Notice on the .state(‘logs/update’) that there are two functions that occur on the resolve.  This allows the route to have access to the \r\n\t\t\t\tgetSingleLog: function($stateParams, LogsService) {    //data of the log being edited.  Also note, that the resolve is getting all user definitions of a workout.\r\n\t\t\t\t\t\treturn LogsService.fetchOne($stateParams.id);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgetUserDefinitions: function(DefineService) {\r\n\t\t\t\t\treturn DefineService.fetch();\r\n\t\t\t\t}\t\t\r\n\t\t\t}\r\n\t\t});//end of $stateProvider . stuff\r\n}\r\n\r\n\r\n\r\n\r\nLogsController.$inject = [\"$state\", \"DefineService\", \"LogsService\"];\r\n\r\nfunction LogsController($state, DefineService, LogsService) {\r\n\tvar vm = this;\r\n\tvm.saved = false;\r\n\tvm.log = {};\r\n\tvm.userDefinitions = DefineService.getDefinitions();\r\n\tvm.updateLog = LogsService.getLog();\r\n\tvm.save = function() {\r\n\t\tLogsService.save(vm.log)\r\n\t\t\t.then(function(){\r\n\t\t\t\tvm.saved = true;\r\n\t\t\t\t$state.go(\"history\");\r\n\t\t\t});\r\n\t};\r\n\r\n\tvm.updateSingleLog = function() {\r\n\t\tvar logToUpdate = {\r\n\t\t\tid: vm.updateLog.id,\r\n\t\t\tdesc: vm.updateLog.description,\r\n\t\t\tresult: vm.updateLog.result,\r\n\t\t\tdef: vm.updateLog.def\r\n\t\t}\r\n\t\tLogsService.updateLog(logToUpdate)\r\n\t\t\t.then(function() {\r\n\t\t\t\t$state.go(\"history\");\r\n\t\t\t});\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n})();//end of wrapper IIFE","(function(){\r\n\r\n\r\nangular.module(\"workoutlog.auth.signin\",[\"ui.router\"])\r\n\t.config(signinConfig);\r\n\r\n\r\n\r\n\r\nfunction signinConfig($stateProvider) {\r\n\t$stateProvider\r\n\t\t.state(\"signin\", {\r\n\t\t\turl: \"/signin\",\r\n\t\t\ttemplateUrl: \"/components/auth/signin.html\",\r\n\t\t\tcontroller: SignInController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this\r\n\t\t});\r\n}\r\n\r\nsigninConfig.$inject = [\"$stateProvider\"];\r\n\r\n\r\n\r\n\r\n\r\nfunction SignInController($state, UsersService) {\r\n\tvar vm = this;\r\n\tvm.user = {};\r\n\tvm.login = function() {\r\n\t\tUsersService.login(vm.user).then(function(response){\r\n\t\t\tconsole.log(response);\r\n\t\t\t$state.go(\"define\");\r\n\t\t});\r\n\t};\r\n}\r\n\r\nSignInController.$inject = [\"$state\", \"UsersService\"];\r\n\r\n\r\n\r\n})();//end of wrapper IIFE","(function(){\r\n\r\n\r\nangular.module(\"workoutlog.auth.signup\", [\"ui.router\"])\r\n\t.config(signupConfig);\r\n\r\n\r\n\r\nfunction signupConfig($stateProvider) {\r\n\t$stateProvider\r\n\t\t.state(\"signup\",{\r\n\t\t\turl: \"/signup\",\r\n\t\t\ttemplateUrl: \"/components/auth/signup.html\",\r\n\t\t\tcontroller: SignUpController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: this\r\n\t\t});\r\n}\r\n\r\nsignupConfig.$inject = [\"$stateProvider\"];\r\n\r\n\r\n\r\n\r\nfunction SignUpController($state, UsersService) {\r\n\tvar vm = this;\r\n\tvm.user = {};\r\n\tvm.submit = function() {\r\n\t\tUsersService.create(vm.user).then(function(response){\r\n\t\t\tconsole.log(\"Response in signup.js from the SignUpController, where we UsersService.create: \" + response);\r\n\t\t\t$state.go(\"define\");\r\n\t\t});\r\n\t};\r\n}\r\n\r\nSignUpController.$inject = [\"$state\", \"UsersService\"];\r\n\r\n\r\n\r\n\r\n\r\n})();//end of wrapper IIFE","\r\n(function() {\r\n\r\n\r\nangular.module(\"workoutlog\")\r\n\t.directive(\"userlinks\", function() {\r\n\r\n\t\tUserLinksController.$inject = [\"$state\", \"CurrentUser\", \"SessionToken\"];\r\n\r\n\t\tfunction UserLinksController($state, CurrentUser, SessionToken) {\r\n\t\t\tvar vm = this;\r\n\t\t\t\r\n\t\t\tvm.user = function() {\r\n\t\t\t\treturn CurrentUser.get();\r\n\t\t\t};\r\n\r\n\t\t\tvm.signedIn = function() {\r\n\t\t\t\treturn !!(vm.user().id);\r\n\t\t\t};\r\n\r\n\t\t\tvm.logout = function() {\r\n\t\t\t\tCurrentUser.clear();\r\n\t\t\t\tSessionToken.clear();\r\n\t\t\t\t$state.go(\"signin\");\r\n\t\t\t};\r\n\t\t};\r\n\r\n\r\n\t\treturn {\r\n\t\t\tscope: {},\r\n\t\t\tcontroller: UserLinksController,\r\n\t\t\tcontrollerAs: \"ctrl\",\r\n\t\t\tbindToController: true,\r\n\t\t\ttemplateUrl: \"/components/auth/userlinks.html\"\r\n\t\t};\r\n\r\n\r\n\t});//end of directive\r\n\r\n\r\n\r\n\r\n})();//end of wrapper IIFE\r\n\r\n\r\n//Notice the return at the bottom of the application.  This is where the directive is configured.  \r\n//It is similar to the configuration of the other components.  One item to note is the scope: {}; creates an isolated scope.  \r\n//This isolates the data to that portion of the application.\r\n\r\n","\r\n(function(){\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.factory(\"AuthInterceptor\", [\"SessionToken\", \"API_BASE\", \r\n\t\t\tfunction(SessionToken, API_BASE) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trequest: function(config) {\r\n\t\t\t\t\t\tvar token = SessionToken.get();\r\n\t\t\t\t\t\tif (token && config.url.indexOf(API_BASE) > -1) {\r\n\t\t\t\t\t\t\tconfig.headers[\"Authorization\"] = token;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn config;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.config([\"$httpProvider\", function($httpProvider) {\r\n\t\t\treturn $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n\t\t}]);\r\n\t\t\r\n})();","(function() {\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.service(\"CurrentUser\", [ \"$window\", function($window) {\r\n\t\t\tfunction CurrentUser() {\r\n\t\t\t\tvar currUser = $window.localStorage.getItem(\"currentUser\");\r\n\t\t\t\tif (currUser && currUser !== \"undefined\") {\r\n\t\t\t\t\tthis.currentUser = JSON.parse($window.localStorage.getItem(\"currentUser\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tCurrentUser.prototype.set = function(user) {\r\n\t\t\t\tthis.currentUser = user;\r\n\t\t\t\t$window.localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.get = function() {\r\n\t\t\t\treturn this.currentUser || {};\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.clear = function() {\r\n\t\t\t\tthis.currentUser = undefined;\r\n\t\t\t\t$window.localStorage.removeItem(\"currentUser\");\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.isSignedIn = function() {\r\n\t\t\t\treturn !!this.get().id;\r\n\t\t\t};\r\n\r\n\t\t\treturn new CurrentUser();\r\n\r\n\t\t}]);\r\n\r\n\r\n\r\n})();","(function(){\r\n\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.service(\"DefineService\", DefineService);\r\n\r\n\r\n\t\tDefineService.$inject = [\"$http\", \"API_BASE\"];\r\n\r\n\r\n\t\tfunction DefineService($http, API_BASE) {\r\n\t\t\tvar defineService = this;\r\n\t\t\tdefineService.userDefinitions = [];\r\n\r\n\t\t\tdefineService.save = function(definition) {\r\n\t\t\t\treturn $http.post(API_BASE + \"definition\", {\r\n\t\t\t\t\t\tdefinition: definition\r\n\t\t\t\t\t}).then(function(response){\r\n\t\t\t\t\t\tdefineService.userDefinitions.unshift(response.data);\r\n\t\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tdefineService.fetch = function(definition) {\r\n\t\t\t\treturn $http.get(API_BASE + \"definition\")\r\n\t\t\t\t\t.then(function(response){\r\n\t\t\t\t\t\tdefineService.userDefinitions = response.data;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tdefineService.getDefinitions = function() {\r\n\t\t\t\treturn defineService.userDefinitions;\r\n\t\t\t};\r\n\r\n\r\n\t\t}\r\n\r\n\r\n})();","(function(){\r\n\r\n\r\nangular.module(\"workoutlog\")\r\n\t.service(\"LogsService\", LogsService);\r\n\r\n\r\n\r\n\tLogsService.$inject = [\"$http\", \"API_BASE\"];\r\n\r\n\tfunction LogsService($http, API_BASE, DefineService) {\r\n\t\tvar logsService = this;\r\n\t\tlogsService.workouts = [];\r\n\t\tlogsService.individualLog = {};\r\n\r\n\r\n\r\n\t\tlogsService.save = function(log) {\r\n\t\t\treturn $http.post(API_BASE + \"log\", {\r\n\t\t\t\tlog: log\r\n\t\t\t}).then(function(response){\r\n\t\t\t\tlogsService.workouts.push(response);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tlogsService.fetch = function(log) {\r\n\t\t\treturn $http.get(API_BASE + \"log\")\r\n\t\t\t\t.then(function(response){\r\n\t\t\t\t\tlogsService.workouts = response.data;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tlogsService.getLogs = function() {\r\n\t\t\treturn logsService.workouts;\r\n\t\t};\r\n\r\n\t\tlogsService.deleteLogs = function(log) {\r\n\t\t\tvar logIndex = logsService.workouts.indexOf(log);\r\n\t\t\tlogsService.workouts.splice(logIndex, 1);\r\n\t\t\tvar deleteData = {log: log};\r\n\t\t\treturn $http({\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\turl: API_BASE + \"log\",\r\n\t\t\t\tdata: JSON.stringify(deleteData),\r\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tlogsService.fetchOne = function(log) {\r\n\t\t\t//console.log(log);\r\n\t\t\treturn $http.get(API_BASE + \"log/\" + log)\r\n\t\t\t\t.then(function(response) {\r\n\t\t\t\t\tlogsService.individualLog = response.data;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tlogsService.getLog = function() {\r\n\t\t\treturn logsService.individualLog;\r\n\t\t};\r\n\r\n\t\tlogsService.updateLog = function(logToUpdate) {\r\n\t\t\treturn $http.put(API_BASE + \"log\", { log: logToUpdate });\r\n\t\t};\r\n\r\n\t}//end of function LogsService()\r\n\r\n\r\n\r\n\r\n})();//end of wrapper IIFE","(function(){\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.service(\"SessionToken\", [\"$window\", function($window) {\r\n\t\t\tfunction SessionToken(){\r\n\t\t\t\tthis.sessionToken = $window.localStorage.getItem(\"sessionToken\");\r\n\t\t\t}\r\n\r\n\t\t\tSessionToken.prototype.set = function(token) {\r\n\t\t\t\tthis.sessionToken = token;\r\n\t\t\t\t$window.localStorage.setItem(\"sessionToken\", token);\r\n\t\t\t};\r\n\r\n\t\t\tSessionToken.prototype.get = function(){\r\n\t\t\t\treturn this.sessionToken;\r\n\t\t\t};\r\n\r\n\t\t\tSessionToken.prototype.clear = function() {\r\n\t\t\t\tthis.sessionToken = undefined;\r\n\t\t\t\t$window.localStorage.removeItem(\"sessionToken\");\r\n\t\t\t};\r\n\r\n\t\t\treturn new SessionToken();\r\n\t\t\t\r\n\t\t}]);\r\n\r\n\r\n})();","(function(){\r\n\r\n\tangular.module(\"workoutlog\")\r\n\t\t.service(\"UsersService\", [\r\n\t\t\t\"$http\", \"API_BASE\", \"SessionToken\", \"CurrentUser\",\r\n\t\t\tfunction($http, API_BASE, SessionToken, CurrentUser) {\r\n\t\t\t\tfunction UsersService(){\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tUsersService.prototype.create = function(user) {\r\n\t\t\t\t\tvar userPromise = $http.post(API_BASE + \"user\", {\r\n\t\t\t\t\t\tuser: user\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tuserPromise.then(function(response){\r\n\t\t\t\t\t\tSessionToken.set(response.data.sessionToken);\r\n\t\t\t\t\t\tCurrentUser.set(response.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn userPromise;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tUsersService.prototype.login = function(user) {\r\n\t\t\t\t\tvar loginPromise = $http.post(API_BASE + \"login\",{\r\n\t\t\t\t\t\tuser: user\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tloginPromise.then(function(response){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tSessionToken.set(response.data.sessionToken);\r\n\t\t\t\t\t\tCurrentUser.set(response.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn loginPromise;\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn new UsersService();\r\n\r\n\t\t\t}]);\r\n\r\n\r\n\t\t\r\n})();"]}